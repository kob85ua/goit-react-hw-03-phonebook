{"version":3,"sources":["components/Styles.js","components/ContactList.jsx","components/InputBlock.jsx","components/SearchForm.jsx","App.js","index.js"],"names":["AppWrapper","styled","div","InputBlockWrapper","form","Label","label","Input","input","Button","button","List","ul","ListItem","li","contactList","phoneContacts","onDeleteContact","map","phoneContact","key","id","name","number","onClick","InputBlock","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","type","onChange","Component","SearchForm","onFindContacts","App","contacts","filter","changeFilter","console","log","findContacts","contact","toLocaleLowerCase","includes","addContact","contactName","contactNumber","existContact","find","alert","undefined","uuidv4","prevState","deleteContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","visibleContacts","ContactList","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a05072a4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst AppWrapper = styled.div`\n  font-family: \"Arial\";\n  font-size: 16px;\n  width: 400px;\n  margin: auto;\n  padding-inline-start: 0;\n  border: 2px grey solid;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst InputBlockWrapper = styled.form`\n  width: 250px;\n  display: flex;\n  height: 120px;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretch;\n`;\nconst Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Input = styled.input`\n  border: 2px grey solid;\n  height: 30px;\n  border-radius: 20px;\n`;\nconst Button = styled.button`\n  width: 90px;\n  align-self: center;\n  height: 30px;\n  border: 2px grey solid;\n  border-radius: 15px;\n`;\nconst List = styled.ul`\n  list-style-type: none;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst ListItem = styled.li`\n  width: 90%;\n  display: flex;\n  flex-direction: space-between;\n  justify-content: center;\n  height: 50px;\n  font-size: 14px;\n  line-height: 50px;\n`;\nexport { AppWrapper, InputBlockWrapper, Label, Input, Button, List, ListItem };\n","import React from \"react\";\nimport { Button, List, ListItem } from \"./Styles\";\nconst contactList = ({ phoneContacts, onDeleteContact }) => (\n  <List>\n    {phoneContacts.map((phoneContact) => (\n      <ListItem key={phoneContact.id}>\n        {phoneContact.name}: {phoneContact.number}\n        <Button onClick={() => onDeleteContact(phoneContact.id)}>Delete</Button>\n      </ListItem>\n    ))}\n  </List>\n);\n\nexport default contactList;\n","import React, { Component } from \"react\";\n\nimport { InputBlockWrapper, Label, Input, Button } from \"./Styles\";\nclass InputBlock extends Component {\n  static propTypes = {};\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <InputBlockWrapper onSubmit={this.handleSubmit}>\n          <Label>\n            <span>Name</span>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </Label>\n          <Label>\n            <span>Number</span>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </InputBlockWrapper>\n      </div>\n    );\n  }\n}\n\nexport default InputBlock;\n","import React from \"react\";\nimport { Input } from \"./Styles\";\nconst SearchForm = ({ value, onFindContacts }) => {\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={(e) => onFindContacts(e.target.value)}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ContactList from \"./components/ContactList\";\nimport InputBlock from \"./components/InputBlock\";\nimport SearchForm from \"./components/SearchForm\";\nimport { AppWrapper } from \"./components/Styles\";\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = (filter) => {\n    console.log(filter);\n    this.setState({ filter });\n  };\n\n  findContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    );\n  };\n\n  addContact = (contactName, contactNumber) => {\n    const existContact = this.state.contacts.find(\n      ({ name }) => name === contactName\n    );\n    if (contactName === \"\" || contactNumber === \"\") {\n      alert(`Fill in all fields`);\n    } else if (existContact !== undefined) {\n      alert(`${existContact.name} is already in contacts`);\n    } else {\n      const contact = {\n        name: contactName,\n        number: contactNumber,\n        id: uuidv4(),\n      };\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n  deleteContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.findContacts();\n\n    return (\n      <AppWrapper>\n        <h2>Phonebook</h2>\n        <InputBlock onAddContact={this.addContact}></InputBlock>\n        <h2>Contacts</h2>\n        <SearchForm\n          value={filter}\n          onFindContacts={this.changeFilter}\n        ></SearchForm>\n        <ContactList\n          phoneContacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        ></ContactList>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}